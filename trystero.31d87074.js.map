{"mappings":"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","sources":["node_modules/trystero/src/index.js","node_modules/trystero/src/torrent.js","node_modules/trystero/src/room.js","node_modules/trystero/src/utils.js","node_modules/simple-peer-light/index.js","node_modules/trystero/src/crypto.js"],"sourcesContent":["export {joinRoom, selfId} from './torrent.js'\n","import room from './room.js'\nimport {\n  encodeBytes,\n  entries,\n  events,\n  fromEntries,\n  genId,\n  initGuard,\n  initPeer,\n  libName,\n  mkErr,\n  noOp,\n  selfId,\n  values\n} from './utils.js'\nimport {genKey, encrypt, decrypt} from './crypto.js'\n\nconst occupiedRooms = {}\nconst sockets = {}\nconst socketListeners = {}\nconst hashLimit = 20\nconst offerPoolSize = 10\nconst defaultRedundancy = 2\nconst defaultAnnounceSecs = 33\nconst maxAnnounceSecs = 120\nconst trackerAction = 'announce'\nconst defaultTrackerUrls = [\n  'wss://tracker.openwebtorrent.com',\n  'wss://tracker.btorrent.xyz',\n  'wss://tracker.files.fm:7073/announce',\n  'wss://qot.abiir.top:443/announce',\n  'wss://spacetradersapi-chatbox.herokuapp.com:443/announce'\n]\n\nexport const joinRoom = initGuard(occupiedRooms, (config, ns) => {\n  const connectedPeers = {}\n  const key = config.password && genKey(config.password, ns)\n  const trackerUrls = (config.trackerUrls || defaultTrackerUrls).slice(\n    0,\n    config.trackerUrls\n      ? config.trackerUrls.length\n      : config.trackerRedundancy || defaultRedundancy\n  )\n\n  if (!trackerUrls.length) {\n    throw mkErr('trackerUrls is empty')\n  }\n\n  const infoHashP = crypto.subtle\n    .digest('SHA-1', encodeBytes(`${libName}:${config.appId}:${ns}`))\n    .then(buffer =>\n      Array.from(new Uint8Array(buffer))\n        .map(b => b.toString(36))\n        .join('')\n        .slice(0, hashLimit)\n    )\n\n  const makeOffers = howMany =>\n    fromEntries(\n      new Array(howMany).fill().map(() => {\n        const peer = initPeer(true, false, config.rtcConfig)\n\n        return [\n          genId(hashLimit),\n          {peer, offerP: new Promise(res => peer.once(events.signal, res))}\n        ]\n      })\n    )\n\n  const makeOfferPool = () => makeOffers(offerPoolSize)\n\n  const onSocketMessage = async (socket, e) => {\n    const infoHash = await infoHashP\n    let val\n\n    try {\n      val = JSON.parse(e.data)\n    } catch (e) {\n      console.error(`${libName}: received malformed SDP JSON`)\n      return\n    }\n\n    if (val.info_hash !== infoHash || (val.peer_id && val.peer_id === selfId)) {\n      return\n    }\n\n    const failure = val['failure reason']\n\n    if (failure) {\n      console.warn(`${libName}: torrent tracker failure (${failure})`)\n      return\n    }\n\n    if (\n      val.interval &&\n      val.interval > announceSecs &&\n      val.interval <= maxAnnounceSecs\n    ) {\n      clearInterval(announceInterval)\n      announceSecs = val.interval\n      announceInterval = setInterval(announceAll, announceSecs * 1000)\n    }\n\n    if (val.offer && val.offer_id) {\n      if (connectedPeers[val.peer_id] || handledOffers[val.offer_id]) {\n        return\n      }\n\n      handledOffers[val.offer_id] = true\n\n      const peer = initPeer(false, false, config.rtcConfig)\n\n      peer.once(events.signal, async answer =>\n        socket.send(\n          JSON.stringify({\n            answer: key\n              ? {...answer, sdp: await encrypt(key, answer.sdp)}\n              : answer,\n            action: trackerAction,\n            info_hash: infoHash,\n            peer_id: selfId,\n            to_peer_id: val.peer_id,\n            offer_id: val.offer_id\n          })\n        )\n      )\n      peer.on(events.connect, () => onConnect(peer, val.peer_id))\n      peer.on(events.close, () => onDisconnect(peer, val.peer_id, val.offer_id))\n      peer.signal(\n        key ? {...val.offer, sdp: await decrypt(key, val.offer.sdp)} : val.offer\n      )\n\n      return\n    }\n\n    if (val.answer) {\n      if (connectedPeers[val.peer_id] || handledOffers[val.offer_id]) {\n        return\n      }\n\n      const offer = offerPool[val.offer_id]\n\n      if (offer) {\n        const {peer} = offer\n\n        if (peer.destroyed) {\n          return\n        }\n\n        handledOffers[val.offer_id] = true\n        peer.on(events.connect, () =>\n          onConnect(peer, val.peer_id, val.offer_id)\n        )\n        peer.on(events.close, () =>\n          onDisconnect(peer, val.peer_id, val.offer_id)\n        )\n        peer.signal(\n          key\n            ? {...val.answer, sdp: await decrypt(key, val.answer.sdp)}\n            : val.answer\n        )\n      }\n    }\n  }\n\n  const announce = async (socket, infoHash) =>\n    socket.send(\n      JSON.stringify({\n        action: trackerAction,\n        info_hash: infoHash,\n        numwant: offerPoolSize,\n        peer_id: selfId,\n        offers: await Promise.all(\n          entries(offerPool).map(async ([id, {offerP}]) => {\n            const offer = await offerP\n\n            return {\n              offer_id: id,\n              offer: key\n                ? {...offer, sdp: await encrypt(key, offer.sdp)}\n                : offer\n            }\n          })\n        )\n      })\n    )\n\n  const makeSocket = (url, infoHash, forced) => {\n    if (forced || !sockets[url]) {\n      socketListeners[url] = {\n        ...socketListeners[url],\n        [infoHash]: onSocketMessage\n      }\n      sockets[url] = new Promise(res => {\n        const socket = new WebSocket(url)\n        socket.onopen = res.bind(null, socket)\n        socket.onmessage = e =>\n          values(socketListeners[url]).forEach(f => f(socket, e))\n      })\n    } else {\n      socketListeners[url][infoHash] = onSocketMessage\n    }\n\n    return sockets[url]\n  }\n\n  const announceAll = async () => {\n    const infoHash = await infoHashP\n\n    if (offerPool) {\n      cleanPool()\n    }\n\n    offerPool = makeOfferPool()\n\n    trackerUrls.forEach(async url => {\n      const socket = await makeSocket(url, infoHash)\n\n      if (socket.readyState === WebSocket.OPEN) {\n        announce(socket, infoHash)\n      } else if (socket.readyState !== WebSocket.CONNECTING) {\n        announce(await makeSocket(url, infoHash, true), infoHash)\n      }\n    })\n  }\n\n  const cleanPool = () => {\n    entries(offerPool).forEach(([id, {peer}]) => {\n      if (!handledOffers[id] && !connectedPeers[id]) {\n        peer.destroy()\n      }\n    })\n\n    handledOffers = {}\n  }\n\n  const onConnect = (peer, id, offerId) => {\n    onPeerConnect(peer, id)\n    connectedPeers[id] = true\n\n    if (offerId) {\n      connectedPeers[offerId] = true\n    }\n  }\n\n  const onDisconnect = (peer, peerId, offerId) => {\n    delete connectedPeers[peerId]\n    peer.destroy()\n\n    const isInOfferPool = offerId in offerPool\n\n    if (isInOfferPool) {\n      delete offerPool[offerId]\n      offerPool = {...offerPool, ...makeOffers(1)}\n    }\n  }\n\n  let announceSecs = defaultAnnounceSecs\n  let announceInterval = setInterval(announceAll, announceSecs * 1000)\n  let onPeerConnect = noOp\n  let handledOffers = {}\n  let offerPool\n\n  occupiedRooms[ns] = true\n  announceAll()\n\n  return room(\n    f => (onPeerConnect = f),\n    async () => {\n      const infoHash = await infoHashP\n\n      trackerUrls.forEach(url => delete socketListeners[url][infoHash])\n      delete occupiedRooms[ns]\n      clearInterval(announceInterval)\n      cleanPool()\n    }\n  )\n})\n\nexport {selfId} from './utils.js'\n","import {\n  combineChunks,\n  decodeBytes,\n  encodeBytes,\n  entries,\n  events,\n  keys,\n  libName,\n  mkErr,\n  noOp\n} from './utils.js'\n\nconst TypedArray = Object.getPrototypeOf(Uint8Array)\nconst typeByteLimit = 12\nconst typeIndex = 0\nconst nonceIndex = typeIndex + typeByteLimit\nconst tagIndex = nonceIndex + 1\nconst progressIndex = tagIndex + 1\nconst payloadIndex = progressIndex + 1\nconst chunkSize = 16 * 2 ** 10 - payloadIndex\nconst oneByteMax = 0xff\nconst buffLowEvent = 'bufferedamountlow'\n\nexport default (onPeer, onSelfLeave) => {\n  const peerMap = {}\n  const actions = {}\n  const pendingTransmissions = {}\n  const pendingPongs = {}\n  const pendingStreamMetas = {}\n  const pendingTrackMetas = {}\n\n  const iterate = (targets, f) =>\n    (targets\n      ? Array.isArray(targets)\n        ? targets\n        : [targets]\n      : keys(peerMap)\n    ).flatMap(id => {\n      const peer = peerMap[id]\n\n      if (!peer) {\n        console.warn(`${libName}: no peer with id ${id} found`)\n        return []\n      }\n\n      return f(id, peer)\n    })\n\n  const exitPeer = id => {\n    if (!peerMap[id]) {\n      return\n    }\n\n    delete peerMap[id]\n    delete pendingTransmissions[id]\n    delete pendingPongs[id]\n    onPeerLeave(id)\n  }\n\n  const makeAction = type => {\n    if (!type) {\n      throw mkErr('action type argument is required')\n    }\n\n    const typeEncoded = encodeBytes(type)\n\n    if (typeEncoded.byteLength > typeByteLimit) {\n      throw mkErr(\n        `action type string \"${type}\" (${typeEncoded.byteLength}b) exceeds ` +\n          `byte limit (${typeByteLimit}). Hint: choose a shorter name.`\n      )\n    }\n\n    const typeBytes = new Uint8Array(typeByteLimit)\n    typeBytes.set(typeEncoded)\n\n    const typePadded = decodeBytes(typeBytes)\n\n    if (actions[typePadded]) {\n      throw mkErr(`action '${type}' already registered`)\n    }\n\n    let nonce = 0\n\n    actions[typePadded] = {onComplete: noOp, onProgress: noOp}\n\n    return [\n      async (data, targets, meta, onProgress) => {\n        if (meta && typeof meta !== 'object') {\n          throw mkErr('action meta argument must be an object')\n        }\n\n        if (data === undefined) {\n          throw mkErr('action data cannot be undefined')\n        }\n\n        const isJson = typeof data !== 'string'\n        const isBlob = data instanceof Blob\n        const isBinary =\n          isBlob || data instanceof ArrayBuffer || data instanceof TypedArray\n\n        if (meta && !isBinary) {\n          throw mkErr('action meta argument can only be used with binary data')\n        }\n\n        const buffer = isBinary\n          ? new Uint8Array(isBlob ? await data.arrayBuffer() : data)\n          : encodeBytes(isJson ? JSON.stringify(data) : data)\n\n        const metaEncoded = meta ? encodeBytes(JSON.stringify(meta)) : null\n\n        const chunkTotal =\n          Math.ceil(buffer.byteLength / chunkSize) + (meta ? 1 : 0)\n\n        const chunks = new Array(chunkTotal).fill().map((_, i) => {\n          const isLast = i === chunkTotal - 1\n          const isMeta = meta && i === 0\n          const chunk = new Uint8Array(\n            payloadIndex +\n              (isMeta\n                ? metaEncoded.byteLength\n                : isLast\n                ? buffer.byteLength - chunkSize * (chunkTotal - (meta ? 2 : 1))\n                : chunkSize)\n          )\n\n          chunk.set(typeBytes)\n          chunk.set([nonce], nonceIndex)\n          chunk.set(\n            [isLast | (isMeta << 1) | (isBinary << 2) | (isJson << 3)],\n            tagIndex\n          )\n          chunk.set(\n            [Math.round(((i + 1) / chunkTotal) * oneByteMax)],\n            progressIndex\n          )\n          chunk.set(\n            meta\n              ? isMeta\n                ? metaEncoded\n                : buffer.subarray((i - 1) * chunkSize, i * chunkSize)\n              : buffer.subarray(i * chunkSize, (i + 1) * chunkSize),\n            payloadIndex\n          )\n\n          return chunk\n        })\n\n        nonce = (nonce + 1) & oneByteMax\n\n        return Promise.all(\n          iterate(targets, async (id, peer) => {\n            const chan = peer._channel\n            let chunkN = 0\n\n            while (chunkN < chunkTotal) {\n              const chunk = chunks[chunkN]\n\n              if (chan.bufferedAmount > chan.bufferedAmountLowThreshold) {\n                await new Promise(res => {\n                  const next = () => {\n                    chan.removeEventListener(buffLowEvent, next)\n                    res()\n                  }\n\n                  chan.addEventListener(buffLowEvent, next)\n                })\n              }\n\n              if (!peerMap[id]) {\n                break\n              }\n\n              peer.send(chunk)\n              chunkN++\n\n              if (onProgress) {\n                onProgress(chunk[progressIndex] / oneByteMax, id, meta)\n              }\n            }\n          })\n        )\n      },\n\n      onComplete =>\n        (actions[typePadded] = {...actions[typePadded], onComplete}),\n\n      onProgress => (actions[typePadded] = {...actions[typePadded], onProgress})\n    ]\n  }\n\n  const handleData = (id, data) => {\n    const buffer = new Uint8Array(data)\n    const type = decodeBytes(buffer.subarray(typeIndex, nonceIndex))\n    const [nonce] = buffer.subarray(nonceIndex, tagIndex)\n    const [tag] = buffer.subarray(tagIndex, progressIndex)\n    const [progress] = buffer.subarray(progressIndex, payloadIndex)\n    const payload = buffer.subarray(payloadIndex)\n    const isLast = !!(tag & 1)\n    const isMeta = !!(tag & (1 << 1))\n    const isBinary = !!(tag & (1 << 2))\n    const isJson = !!(tag & (1 << 3))\n\n    if (!actions[type]) {\n      throw mkErr(`received message with unregistered type (${type})`)\n    }\n\n    if (!pendingTransmissions[id]) {\n      pendingTransmissions[id] = {}\n    }\n\n    if (!pendingTransmissions[id][type]) {\n      pendingTransmissions[id][type] = {}\n    }\n\n    let target = pendingTransmissions[id][type][nonce]\n\n    if (!target) {\n      target = pendingTransmissions[id][type][nonce] = {chunks: []}\n    }\n\n    if (isMeta) {\n      target.meta = JSON.parse(decodeBytes(payload))\n    } else {\n      target.chunks.push(payload)\n    }\n\n    actions[type].onProgress(progress / oneByteMax, id, target.meta)\n\n    if (!isLast) {\n      return\n    }\n\n    const full = combineChunks(target.chunks)\n\n    if (isBinary) {\n      actions[type].onComplete(full, id, target.meta)\n    } else {\n      const text = decodeBytes(full)\n      actions[type].onComplete(isJson ? JSON.parse(text) : text, id)\n    }\n\n    delete pendingTransmissions[id][type][nonce]\n  }\n\n  const [sendPing, getPing] = makeAction('__91n6__')\n  const [sendPong, getPong] = makeAction('__90n6__')\n  const [sendSignal, getSignal] = makeAction('__516n4L__')\n  const [sendStreamMeta, getStreamMeta] = makeAction('__57r34m__')\n  const [sendTrackMeta, getTrackMeta] = makeAction('__7r4ck__')\n\n  let onPeerJoin = noOp\n  let onPeerLeave = noOp\n  let onPeerStream = noOp\n  let onPeerTrack = noOp\n\n  onPeer((peer, id) => {\n    if (peerMap[id]) {\n      return\n    }\n\n    const onData = handleData.bind(null, id)\n\n    peerMap[id] = peer\n\n    peer.on(events.signal, sdp => sendSignal(sdp, id))\n    peer.on(events.close, () => exitPeer(id))\n    peer.on(events.data, onData)\n\n    peer.on(events.stream, stream => {\n      onPeerStream(stream, id, pendingStreamMetas[id])\n      delete pendingStreamMetas[id]\n    })\n\n    peer.on(events.track, (track, stream) => {\n      onPeerTrack(track, stream, id, pendingTrackMetas[id])\n      delete pendingTrackMetas[id]\n    })\n\n    peer.on(events.error, e => {\n      if (e.code === 'ERR_DATA_CHANNEL') {\n        return\n      }\n      console.error(e)\n    })\n\n    onPeerJoin(id)\n    peer.__drainEarlyData(onData)\n  })\n\n  getPing((_, id) => sendPong(null, id))\n\n  getPong((_, id) => {\n    if (pendingPongs[id]) {\n      pendingPongs[id]()\n      delete pendingPongs[id]\n    }\n  })\n\n  getSignal((sdp, id) => {\n    if (peerMap[id]) {\n      peerMap[id].signal(sdp)\n    }\n  })\n\n  getStreamMeta((meta, id) => (pendingStreamMetas[id] = meta))\n\n  getTrackMeta((meta, id) => (pendingTrackMetas[id] = meta))\n\n  return {\n    makeAction,\n\n    ping: async id => {\n      if (!id) {\n        throw mkErr('ping() must be called with target peer ID')\n      }\n\n      const start = Date.now()\n      sendPing(null, id)\n      await new Promise(res => (pendingPongs[id] = res))\n      return Date.now() - start\n    },\n\n    leave: () => {\n      entries(peerMap).forEach(([id, peer]) => {\n        peer.destroy()\n        delete peerMap[id]\n      })\n      onSelfLeave()\n    },\n\n    getPeers: () => keys(peerMap),\n\n    addStream: (stream, targets, meta) =>\n      iterate(targets, async (id, peer) => {\n        if (meta) {\n          await sendStreamMeta(meta, id)\n        }\n\n        peer.addStream(stream)\n      }),\n\n    removeStream: (stream, targets) =>\n      iterate(targets, (_, peer) => peer.removeStream(stream)),\n\n    addTrack: (track, stream, targets, meta) =>\n      iterate(targets, async (id, peer) => {\n        if (meta) {\n          await sendTrackMeta(meta, id)\n        }\n\n        peer.addTrack(track, stream)\n      }),\n\n    removeTrack: (track, stream, targets) =>\n      iterate(targets, (_, peer) => peer.removeTrack(track, stream)),\n\n    replaceTrack: (oldTrack, newTrack, stream, targets, meta) =>\n      iterate(targets, async (id, peer) => {\n        if (meta) {\n          await sendTrackMeta(meta, id)\n        }\n\n        peer.replaceTrack(oldTrack, newTrack, stream)\n      }),\n\n    onPeerJoin: f => (onPeerJoin = f),\n\n    onPeerLeave: f => (onPeerLeave = f),\n\n    onPeerStream: f => (onPeerStream = f),\n\n    onPeerTrack: f => (onPeerTrack = f)\n  }\n}\n","import Peer from 'simple-peer-light'\n\nconst charSet = '0123456789AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz'\n\nexport const initPeer = (initiator, trickle, config) => {\n  const peer = new Peer({initiator, trickle, config})\n  const onData = data => peer.__earlyDataBuffer.push(data)\n\n  peer.on(events.data, onData)\n  peer.__earlyDataBuffer = []\n  peer.__drainEarlyData = f => {\n    peer.off(events.data, onData)\n    peer.__earlyDataBuffer.forEach(f)\n    delete peer.__earlyDataBuffer\n    delete peer.__drainEarlyData\n  }\n\n  return peer\n}\n\nexport const genId = n =>\n  new Array(n)\n    .fill()\n    .map(() => charSet[Math.floor(Math.random() * charSet.length)])\n    .join('')\n\nexport const initGuard = (occupiedRooms, f) => (config, ns) => {\n  if (occupiedRooms[ns]) {\n    throw mkErr(`already joined room ${ns}`)\n  }\n\n  if (!config) {\n    throw mkErr('requires a config map as the first argument')\n  }\n\n  if (!config.appId && !config.firebaseApp) {\n    throw mkErr('config map is missing appId field')\n  }\n\n  if (!ns) {\n    throw mkErr('namespace argument required')\n  }\n\n  return f(config, ns)\n}\n\nexport const libName = 'Trystero'\n\nexport const selfId = genId(20)\n\nexport const {keys, values, entries, fromEntries} = Object\n\nexport const noOp = () => {}\n\nexport const mkErr = msg => new Error(`${libName}: ${msg}`)\n\nexport const encodeBytes = txt => new TextEncoder().encode(txt)\n\nexport const decodeBytes = txt => new TextDecoder().decode(txt)\n\nexport const events = fromEntries(\n  ['close', 'connect', 'data', 'error', 'signal', 'stream', 'track'].map(k => [\n    k,\n    k\n  ])\n)\n\nexport const combineChunks = chunks => {\n  const full = new Uint8Array(chunks.reduce((a, c) => a + c.byteLength, 0))\n\n  chunks.reduce((a, c) => {\n    full.set(c, a)\n    return a + c.byteLength\n  }, 0)\n\n  return full\n}\n","/*! simple-peer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nconst MAX_BUFFERED_AMOUNT = 64 * 1024\nconst ICECOMPLETE_TIMEOUT = 5 * 1000\nconst CHANNEL_CLOSING_TIMEOUT = 5 * 1000\n\nfunction randombytes (size) {\n  const array = new Uint8Array(size)\n  for (let i = 0; i < size; i++) {\n    array[i] = (Math.random() * 256) | 0\n  }\n  return array\n}\n\nfunction getBrowserRTC () {\n  if (typeof globalThis === 'undefined') return null\n  const wrtc = {\n    RTCPeerConnection:\n      globalThis.RTCPeerConnection ||\n      globalThis.mozRTCPeerConnection ||\n      globalThis.webkitRTCPeerConnection,\n    RTCSessionDescription:\n      globalThis.RTCSessionDescription ||\n      globalThis.mozRTCSessionDescription ||\n      globalThis.webkitRTCSessionDescription,\n    RTCIceCandidate:\n      globalThis.RTCIceCandidate ||\n      globalThis.mozRTCIceCandidate ||\n      globalThis.webkitRTCIceCandidate\n  }\n  if (!wrtc.RTCPeerConnection) return null\n  return wrtc\n}\n\nfunction errCode (err, code) {\n  Object.defineProperty(err, 'code', {\n    value: code,\n    enumerable: true,\n    configurable: true\n  })\n  return err\n}\n\n// HACK: Filter trickle lines when trickle is disabled #354\nfunction filterTrickle (sdp) {\n  return sdp.replace(/a=ice-options:trickle\\s\\n/g, '')\n}\n\nfunction warn (message) {\n  console.warn(message)\n}\n\n/**\n * WebRTC peer connection.\n * @param {Object} opts\n */\nclass Peer {\n  constructor (opts = {}) {\n    this._map = new Map() // for event emitter\n\n    this._id = randombytes(4).toString('hex').slice(0, 7)\n    this._doDebug = opts.debug\n    this._debug('new peer %o', opts)\n\n    this.channelName = opts.initiator\n      ? opts.channelName || randombytes(20).toString('hex')\n      : null\n\n    this.initiator = opts.initiator || false\n    this.channelConfig = opts.channelConfig || Peer.channelConfig\n    this.channelNegotiated = this.channelConfig.negotiated\n    this.config = Object.assign({}, Peer.config, opts.config)\n    this.offerOptions = opts.offerOptions || {}\n    this.answerOptions = opts.answerOptions || {}\n    this.sdpTransform = opts.sdpTransform || (sdp => sdp)\n    this.streams = opts.streams || (opts.stream ? [opts.stream] : []) // support old \"stream\" option\n    this.trickle = opts.trickle !== undefined ? opts.trickle : true\n    this.allowHalfTrickle =\n      opts.allowHalfTrickle !== undefined ? opts.allowHalfTrickle : false\n    this.iceCompleteTimeout = opts.iceCompleteTimeout || ICECOMPLETE_TIMEOUT\n\n    this.destroyed = false\n    this.destroying = false\n    this._connected = false\n\n    this.remoteAddress = undefined\n    this.remoteFamily = undefined\n    this.remotePort = undefined\n    this.localAddress = undefined\n    this.localFamily = undefined\n    this.localPort = undefined\n\n    this._wrtc =\n      opts.wrtc && typeof opts.wrtc === 'object' ? opts.wrtc : getBrowserRTC()\n\n    if (!this._wrtc) {\n      if (typeof window === 'undefined') {\n        throw errCode(\n          new Error(\n            'No WebRTC support: Specify `opts.wrtc` option in this environment'\n          ),\n          'ERR_WEBRTC_SUPPORT'\n        )\n      } else {\n        throw errCode(\n          new Error('No WebRTC support: Not a supported browser'),\n          'ERR_WEBRTC_SUPPORT'\n        )\n      }\n    }\n\n    this._pcReady = false\n    this._channelReady = false\n    this._iceComplete = false // ice candidate trickle done (got null candidate)\n    this._iceCompleteTimer = null // send an offer/answer anyway after some timeout\n    this._channel = null\n    this._pendingCandidates = []\n\n    this._isNegotiating = false // is this peer waiting for negotiation to complete?\n    this._firstNegotiation = true\n    this._batchedNegotiation = false // batch synchronous negotiations\n    this._queuedNegotiation = false // is there a queued negotiation request?\n    this._sendersAwaitingStable = []\n    this._senderMap = new Map()\n    this._closingInterval = null\n\n    this._remoteTracks = []\n    this._remoteStreams = []\n\n    this._chunk = null\n    this._cb = null\n    this._interval = null\n\n    try {\n      this._pc = new this._wrtc.RTCPeerConnection(this.config)\n    } catch (err) {\n      this.destroy(errCode(err, 'ERR_PC_CONSTRUCTOR'))\n      return\n    }\n\n    // We prefer feature detection whenever possible, but sometimes that's not\n    // possible for certain implementations.\n    this._isReactNativeWebrtc = typeof this._pc._peerConnectionId === 'number'\n\n    this._pc.oniceconnectionstatechange = () => {\n      this._onIceStateChange()\n    }\n    this._pc.onicegatheringstatechange = () => {\n      this._onIceStateChange()\n    }\n    this._pc.onconnectionstatechange = () => {\n      this._onConnectionStateChange()\n    }\n    this._pc.onsignalingstatechange = () => {\n      this._onSignalingStateChange()\n    }\n    this._pc.onicecandidate = event => {\n      this._onIceCandidate(event)\n    }\n\n    // HACK: Fix for odd Firefox behavior, see: https://github.com/feross/simple-peer/pull/783\n    if (typeof this._pc.peerIdentity === 'object') {\n      this._pc.peerIdentity.catch(err => {\n        this.destroy(errCode(err, 'ERR_PC_PEER_IDENTITY'))\n      })\n    }\n\n    // Other spec events, unused by this implementation:\n    // - onconnectionstatechange\n    // - onicecandidateerror\n    // - onfingerprintfailure\n    // - onnegotiationneeded\n\n    if (this.initiator || this.channelNegotiated) {\n      this._setupData({\n        channel: this._pc.createDataChannel(\n          this.channelName,\n          this.channelConfig\n        )\n      })\n    } else {\n      this._pc.ondatachannel = event => {\n        this._setupData(event)\n      }\n    }\n\n    if (this.streams) {\n      this.streams.forEach(stream => {\n        this.addStream(stream)\n      })\n    }\n    this._pc.ontrack = event => {\n      this._onTrack(event)\n    }\n\n    this._debug('initial negotiation')\n    this._needsNegotiation()\n  }\n\n  get bufferSize () {\n    return (this._channel && this._channel.bufferedAmount) || 0\n  }\n\n  // HACK: it's possible channel.readyState is \"closing\" before peer.destroy() fires\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=882743\n  get connected () {\n    return this._connected && this._channel.readyState === 'open'\n  }\n\n  address () {\n    return {\n      port: this.localPort,\n      family: this.localFamily,\n      address: this.localAddress\n    }\n  }\n\n  signal (data) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot signal after peer is destroyed'), 'ERR_DESTROYED')\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data)\n      } catch (err) {\n        data = {}\n      }\n    }\n    this._debug('signal()')\n\n    if (data.renegotiate && this.initiator) {\n      this._debug('got request to renegotiate')\n      this._needsNegotiation()\n    }\n    if (data.transceiverRequest && this.initiator) {\n      this._debug('got request for transceiver')\n      this.addTransceiver(\n        data.transceiverRequest.kind,\n        data.transceiverRequest.init\n      )\n    }\n    if (data.candidate) {\n      if (this._pc.remoteDescription && this._pc.remoteDescription.type) {\n        this._addIceCandidate(data.candidate)\n      } else {\n        this._pendingCandidates.push(data.candidate)\n      }\n    }\n    if (data.sdp) {\n      this._pc\n        .setRemoteDescription(new this._wrtc.RTCSessionDescription(data))\n        .then(() => {\n          if (this.destroyed) return\n\n          this._pendingCandidates.forEach(candidate => {\n            this._addIceCandidate(candidate)\n          })\n          this._pendingCandidates = []\n\n          if (this._pc.remoteDescription.type === 'offer') this._createAnswer()\n        })\n        .catch(err => {\n          this.destroy(errCode(err, 'ERR_SET_REMOTE_DESCRIPTION'))\n        })\n    }\n    if (\n      !data.sdp &&\n      !data.candidate &&\n      !data.renegotiate &&\n      !data.transceiverRequest\n    ) {\n      this.destroy(\n        errCode(\n          new Error('signal() called with invalid signal data'),\n          'ERR_SIGNALING'\n        )\n      )\n    }\n  }\n\n  _addIceCandidate (candidate) {\n    const iceCandidateObj = new this._wrtc.RTCIceCandidate(candidate)\n    this._pc.addIceCandidate(iceCandidateObj).catch(err => {\n      if (\n        !iceCandidateObj.address ||\n        iceCandidateObj.address.endsWith('.local')\n      ) {\n        warn('Ignoring unsupported ICE candidate.')\n      } else {\n        this.destroy(errCode(err, 'ERR_ADD_ICE_CANDIDATE'))\n      }\n    })\n  }\n\n  /**\n   * Send text/binary data to the remote peer.\n   * @param {ArrayBufferView|ArrayBuffer|string|Blob} chunk\n   */\n  send (chunk) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot send after peer is destroyed'), 'ERR_DESTROYED')\n    this._channel.send(chunk)\n  }\n\n  /**\n   * Add a Transceiver to the connection.\n   * @param {String} kind\n   * @param {Object} init\n   */\n  addTransceiver (kind, init) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot addTransceiver after peer is destroyed'), 'ERR_DESTROYED')\n    this._debug('addTransceiver()')\n\n    if (this.initiator) {\n      try {\n        this._pc.addTransceiver(kind, init)\n        this._needsNegotiation()\n      } catch (err) {\n        this.destroy(errCode(err, 'ERR_ADD_TRANSCEIVER'))\n      }\n    } else {\n      this.emit('signal', {\n        // request initiator to renegotiate\n        type: 'transceiverRequest',\n        transceiverRequest: { kind, init }\n      })\n    }\n  }\n\n  /**\n   * Add a MediaStream to the connection.\n   * @param {MediaStream} stream\n   */\n  addStream (stream) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot addStream after peer is destroyed'), 'ERR_DESTROYED')\n    this._debug('addStream()')\n\n    stream.getTracks().forEach(track => {\n      this.addTrack(track, stream)\n    })\n  }\n\n  /**\n   * Add a MediaStreamTrack to the connection.\n   * @param {MediaStreamTrack} track\n   * @param {MediaStream} stream\n   */\n  addTrack (track, stream) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot addTrack after peer is destroyed'), 'ERR_DESTROYED')\n    this._debug('addTrack()')\n\n    const submap = this._senderMap.get(track) || new Map() // nested Maps map [track, stream] to sender\n    let sender = submap.get(stream)\n    if (!sender) {\n      sender = this._pc.addTrack(track, stream)\n      submap.set(stream, sender)\n      this._senderMap.set(track, submap)\n      this._needsNegotiation()\n    } else if (sender.removed) {\n      throw errCode(\n        new Error(\n          'Track has been removed. You should enable/disable tracks that you want to re-add.'\n        ),\n        'ERR_SENDER_REMOVED'\n      )\n    } else {\n      throw errCode(\n        new Error('Track has already been added to that stream.'),\n        'ERR_SENDER_ALREADY_ADDED'\n      )\n    }\n  }\n\n  /**\n   * Replace a MediaStreamTrack by another in the connection.\n   * @param {MediaStreamTrack} oldTrack\n   * @param {MediaStreamTrack} newTrack\n   * @param {MediaStream} stream\n   */\n  replaceTrack (oldTrack, newTrack, stream) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot replaceTrack after peer is destroyed'), 'ERR_DESTROYED')\n    this._debug('replaceTrack()')\n\n    const submap = this._senderMap.get(oldTrack)\n    const sender = submap ? submap.get(stream) : null\n    if (!sender) {\n      throw errCode(\n        new Error('Cannot replace track that was never added.'),\n        'ERR_TRACK_NOT_ADDED'\n      )\n    }\n    if (newTrack) this._senderMap.set(newTrack, submap)\n\n    if (sender.replaceTrack != null) {\n      sender.replaceTrack(newTrack)\n    } else {\n      this.destroy(\n        errCode(\n          new Error('replaceTrack is not supported in this browser'),\n          'ERR_UNSUPPORTED_REPLACETRACK'\n        )\n      )\n    }\n  }\n\n  /**\n   * Remove a MediaStreamTrack from the connection.\n   * @param {MediaStreamTrack} track\n   * @param {MediaStream} stream\n   */\n  removeTrack (track, stream) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot removeTrack after peer is destroyed'), 'ERR_DESTROYED')\n    this._debug('removeSender()')\n\n    const submap = this._senderMap.get(track)\n    const sender = submap ? submap.get(stream) : null\n    if (!sender) {\n      throw errCode(\n        new Error('Cannot remove track that was never added.'),\n        'ERR_TRACK_NOT_ADDED'\n      )\n    }\n    try {\n      sender.removed = true\n      this._pc.removeTrack(sender)\n    } catch (err) {\n      if (err.name === 'NS_ERROR_UNEXPECTED') {\n        this._sendersAwaitingStable.push(sender) // HACK: Firefox must wait until (signalingState === stable) https://bugzilla.mozilla.org/show_bug.cgi?id=1133874\n      } else {\n        this.destroy(errCode(err, 'ERR_REMOVE_TRACK'))\n      }\n    }\n    this._needsNegotiation()\n  }\n\n  /**\n   * Remove a MediaStream from the connection.\n   * @param {MediaStream} stream\n   */\n  removeStream (stream) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot removeStream after peer is destroyed'), 'ERR_DESTROYED')\n    this._debug('removeSenders()')\n\n    stream.getTracks().forEach(track => {\n      this.removeTrack(track, stream)\n    })\n  }\n\n  _needsNegotiation () {\n    this._debug('_needsNegotiation')\n    if (this._batchedNegotiation) return // batch synchronous renegotiations\n    this._batchedNegotiation = true\n    queueMicrotask(() => {\n      this._batchedNegotiation = false\n      if (this.initiator || !this._firstNegotiation) {\n        this._debug('starting batched negotiation')\n        this.negotiate()\n      } else {\n        this._debug('non-initiator initial negotiation request discarded')\n      }\n      this._firstNegotiation = false\n    })\n  }\n\n  negotiate () {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot negotiate after peer is destroyed'), 'ERR_DESTROYED')\n\n    if (this.initiator) {\n      if (this._isNegotiating) {\n        this._queuedNegotiation = true\n        this._debug('already negotiating, queueing')\n      } else {\n        this._debug('start negotiation')\n        setTimeout(() => {\n          // HACK: Chrome crashes if we immediately call createOffer\n          this._createOffer()\n        }, 0)\n      }\n    } else {\n      if (this._isNegotiating) {\n        this._queuedNegotiation = true\n        this._debug('already negotiating, queueing')\n      } else {\n        this._debug('requesting negotiation from initiator')\n        this.emit('signal', {\n          // request initiator to renegotiate\n          type: 'renegotiate',\n          renegotiate: true\n        })\n      }\n    }\n    this._isNegotiating = true\n  }\n\n  destroy (err) {\n    if (this.destroyed || this.destroying) return\n    this.destroying = true\n\n    this._debug('destroying (error: %s)', err && (err.message || err))\n\n    queueMicrotask(() => {\n      // allow events concurrent with the call to _destroy() to fire (see #692)\n      this.destroyed = true\n      this.destroying = false\n\n      this._debug('destroy (error: %s)', err && (err.message || err))\n\n      this._connected = false\n      this._pcReady = false\n      this._channelReady = false\n      this._remoteTracks = null\n      this._remoteStreams = null\n      this._senderMap = null\n\n      clearInterval(this._closingInterval)\n      this._closingInterval = null\n\n      clearInterval(this._interval)\n      this._interval = null\n      this._chunk = null\n      this._cb = null\n\n      if (this._channel) {\n        try {\n          this._channel.close()\n        } catch (err) {}\n\n        // allow events concurrent with destruction to be handled\n        this._channel.onmessage = null\n        this._channel.onopen = null\n        this._channel.onclose = null\n        this._channel.onerror = null\n      }\n      if (this._pc) {\n        try {\n          this._pc.close()\n        } catch (err) {}\n\n        // allow events concurrent with destruction to be handled\n        this._pc.oniceconnectionstatechange = null\n        this._pc.onicegatheringstatechange = null\n        this._pc.onsignalingstatechange = null\n        this._pc.onicecandidate = null\n        this._pc.ontrack = null\n        this._pc.ondatachannel = null\n      }\n      this._pc = null\n      this._channel = null\n\n      if (err) this.emit('error', err)\n      this.emit('close')\n    })\n  }\n\n  _setupData (event) {\n    if (!event.channel) {\n      // In some situations `pc.createDataChannel()` returns `undefined` (in wrtc),\n      // which is invalid behavior. Handle it gracefully.\n      // See: https://github.com/feross/simple-peer/issues/163\n      return this.destroy(\n        errCode(\n          new Error('Data channel event is missing `channel` property'),\n          'ERR_DATA_CHANNEL'\n        )\n      )\n    }\n\n    this._channel = event.channel\n    this._channel.binaryType = 'arraybuffer'\n\n    if (typeof this._channel.bufferedAmountLowThreshold === 'number') {\n      this._channel.bufferedAmountLowThreshold = MAX_BUFFERED_AMOUNT\n    }\n\n    this.channelName = this._channel.label\n\n    this._channel.onmessage = event => {\n      this._onChannelMessage(event)\n    }\n    this._channel.onbufferedamountlow = () => {\n      this._onChannelBufferedAmountLow()\n    }\n    this._channel.onopen = () => {\n      this._onChannelOpen()\n    }\n    this._channel.onclose = () => {\n      this._onChannelClose()\n    }\n    this._channel.onerror = err => {\n      this.destroy(errCode(err, 'ERR_DATA_CHANNEL'))\n    }\n\n    // HACK: Chrome will sometimes get stuck in readyState \"closing\", let's check for this condition\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=882743\n    let isClosing = false\n    this._closingInterval = setInterval(() => {\n      // No \"onclosing\" event\n      if (this._channel && this._channel.readyState === 'closing') {\n        if (isClosing) this._onChannelClose() // closing timed out: equivalent to onclose firing\n        isClosing = true\n      } else {\n        isClosing = false\n      }\n    }, CHANNEL_CLOSING_TIMEOUT)\n  }\n\n  _startIceCompleteTimeout () {\n    if (this.destroyed) return\n    if (this._iceCompleteTimer) return\n    this._debug('started iceComplete timeout')\n    this._iceCompleteTimer = setTimeout(() => {\n      if (!this._iceComplete) {\n        this._iceComplete = true\n        this._debug('iceComplete timeout completed')\n        this.emit('iceTimeout')\n        this.emit('_iceComplete')\n      }\n    }, this.iceCompleteTimeout)\n  }\n\n  _createOffer () {\n    if (this.destroyed) return\n\n    this._pc\n      .createOffer(this.offerOptions)\n      .then(offer => {\n        if (this.destroyed) return\n        if (!this.trickle && !this.allowHalfTrickle) { offer.sdp = filterTrickle(offer.sdp) }\n        offer.sdp = this.sdpTransform(offer.sdp)\n\n        const sendOffer = () => {\n          if (this.destroyed) return\n          const signal = this._pc.localDescription || offer\n          this._debug('signal')\n          this.emit('signal', {\n            type: signal.type,\n            sdp: signal.sdp\n          })\n        }\n\n        const onSuccess = () => {\n          this._debug('createOffer success')\n          if (this.destroyed) return\n          if (this.trickle || this._iceComplete) sendOffer()\n          else this.once('_iceComplete', sendOffer) // wait for candidates\n        }\n\n        const onError = err => {\n          this.destroy(errCode(err, 'ERR_SET_LOCAL_DESCRIPTION'))\n        }\n\n        this._pc.setLocalDescription(offer).then(onSuccess).catch(onError)\n      })\n      .catch(err => {\n        this.destroy(errCode(err, 'ERR_CREATE_OFFER'))\n      })\n  }\n\n  _requestMissingTransceivers () {\n    if (this._pc.getTransceivers) {\n      this._pc.getTransceivers().forEach(transceiver => {\n        if (\n          !transceiver.mid &&\n          transceiver.sender.track &&\n          !transceiver.requested\n        ) {\n          transceiver.requested = true // HACK: Safari returns negotiated transceivers with a null mid\n          this.addTransceiver(transceiver.sender.track.kind)\n        }\n      })\n    }\n  }\n\n  _createAnswer () {\n    if (this.destroyed) return\n\n    this._pc\n      .createAnswer(this.answerOptions)\n      .then(answer => {\n        if (this.destroyed) return\n        if (!this.trickle && !this.allowHalfTrickle) { answer.sdp = filterTrickle(answer.sdp) }\n        answer.sdp = this.sdpTransform(answer.sdp)\n\n        const sendAnswer = () => {\n          if (this.destroyed) return\n          const signal = this._pc.localDescription || answer\n          this._debug('signal')\n          this.emit('signal', {\n            type: signal.type,\n            sdp: signal.sdp\n          })\n          if (!this.initiator) this._requestMissingTransceivers()\n        }\n\n        const onSuccess = () => {\n          if (this.destroyed) return\n          if (this.trickle || this._iceComplete) sendAnswer()\n          else this.once('_iceComplete', sendAnswer)\n        }\n\n        const onError = err => {\n          this.destroy(errCode(err, 'ERR_SET_LOCAL_DESCRIPTION'))\n        }\n\n        this._pc.setLocalDescription(answer).then(onSuccess).catch(onError)\n      })\n      .catch(err => {\n        this.destroy(errCode(err, 'ERR_CREATE_ANSWER'))\n      })\n  }\n\n  _onConnectionStateChange () {\n    if (this.destroyed) return\n    if (this._pc.connectionState === 'failed') {\n      this.destroy(\n        errCode(new Error('Connection failed.'), 'ERR_CONNECTION_FAILURE')\n      )\n    }\n  }\n\n  _onIceStateChange () {\n    if (this.destroyed) return\n    const iceConnectionState = this._pc.iceConnectionState\n    const iceGatheringState = this._pc.iceGatheringState\n\n    this._debug(\n      'iceStateChange (connection: %s) (gathering: %s)',\n      iceConnectionState,\n      iceGatheringState\n    )\n    this.emit('iceStateChange', iceConnectionState, iceGatheringState)\n\n    if (\n      iceConnectionState === 'connected' ||\n      iceConnectionState === 'completed'\n    ) {\n      this._pcReady = true\n      this._maybeReady()\n    }\n    if (iceConnectionState === 'failed') {\n      this.destroy(\n        errCode(\n          new Error('Ice connection failed.'),\n          'ERR_ICE_CONNECTION_FAILURE'\n        )\n      )\n    }\n    if (iceConnectionState === 'closed') {\n      this.destroy(\n        errCode(\n          new Error('Ice connection closed.'),\n          'ERR_ICE_CONNECTION_CLOSED'\n        )\n      )\n    }\n  }\n\n  getStats (cb) {\n    // statreports can come with a value array instead of properties\n    const flattenValues = report => {\n      if (Object.prototype.toString.call(report.values) === '[object Array]') {\n        report.values.forEach(value => {\n          Object.assign(report, value)\n        })\n      }\n      return report\n    }\n\n    // Promise-based getStats() (standard)\n    if (this._pc.getStats.length === 0 || this._isReactNativeWebrtc) {\n      this._pc.getStats().then(\n        res => {\n          const reports = []\n          res.forEach(report => {\n            reports.push(flattenValues(report))\n          })\n          cb(null, reports)\n        },\n        err => cb(err)\n      )\n\n      // Single-parameter callback-based getStats() (non-standard)\n    } else if (this._pc.getStats.length > 0) {\n      this._pc.getStats(\n        res => {\n          // If we destroy connection in `connect` callback this code might happen to run when actual connection is already closed\n          if (this.destroyed) return\n\n          const reports = []\n          res.result().forEach(result => {\n            const report = {}\n            result.names().forEach(name => {\n              report[name] = result.stat(name)\n            })\n            report.id = result.id\n            report.type = result.type\n            report.timestamp = result.timestamp\n            reports.push(flattenValues(report))\n          })\n          cb(null, reports)\n        },\n        err => cb(err)\n      )\n\n      // Unknown browser, skip getStats() since it's anyone's guess which style of\n      // getStats() they implement.\n    } else {\n      cb(null, [])\n    }\n  }\n\n  _maybeReady () {\n    this._debug(\n      'maybeReady pc %s channel %s',\n      this._pcReady,\n      this._channelReady\n    )\n    if (\n      this._connected ||\n      this._connecting ||\n      !this._pcReady ||\n      !this._channelReady\n    ) { return }\n\n    this._connecting = true\n\n    // HACK: We can't rely on order here, for details see https://github.com/js-platform/node-webrtc/issues/339\n    const findCandidatePair = () => {\n      if (this.destroyed) return\n\n      this.getStats((err, items) => {\n        if (this.destroyed) return\n\n        // Treat getStats error as non-fatal. It's not essential.\n        if (err) items = []\n\n        const remoteCandidates = {}\n        const localCandidates = {}\n        const candidatePairs = {}\n        let foundSelectedCandidatePair = false\n\n        items.forEach(item => {\n          // TODO: Once all browsers support the hyphenated stats report types, remove\n          // the non-hypenated ones\n          if (\n            item.type === 'remotecandidate' ||\n            item.type === 'remote-candidate'\n          ) {\n            remoteCandidates[item.id] = item\n          }\n          if (\n            item.type === 'localcandidate' ||\n            item.type === 'local-candidate'\n          ) {\n            localCandidates[item.id] = item\n          }\n          if (item.type === 'candidatepair' || item.type === 'candidate-pair') {\n            candidatePairs[item.id] = item\n          }\n        })\n\n        const setSelectedCandidatePair = selectedCandidatePair => {\n          foundSelectedCandidatePair = true\n\n          let local = localCandidates[selectedCandidatePair.localCandidateId]\n\n          if (local && (local.ip || local.address)) {\n            // Spec\n            this.localAddress = local.ip || local.address\n            this.localPort = Number(local.port)\n          } else if (local && local.ipAddress) {\n            // Firefox\n            this.localAddress = local.ipAddress\n            this.localPort = Number(local.portNumber)\n          } else if (\n            typeof selectedCandidatePair.googLocalAddress === 'string'\n          ) {\n            // TODO: remove this once Chrome 58 is released\n            local = selectedCandidatePair.googLocalAddress.split(':')\n            this.localAddress = local[0]\n            this.localPort = Number(local[1])\n          }\n          if (this.localAddress) {\n            this.localFamily = this.localAddress.includes(':')\n              ? 'IPv6'\n              : 'IPv4'\n          }\n\n          let remote =\n            remoteCandidates[selectedCandidatePair.remoteCandidateId]\n\n          if (remote && (remote.ip || remote.address)) {\n            // Spec\n            this.remoteAddress = remote.ip || remote.address\n            this.remotePort = Number(remote.port)\n          } else if (remote && remote.ipAddress) {\n            // Firefox\n            this.remoteAddress = remote.ipAddress\n            this.remotePort = Number(remote.portNumber)\n          } else if (\n            typeof selectedCandidatePair.googRemoteAddress === 'string'\n          ) {\n            // TODO: remove this once Chrome 58 is released\n            remote = selectedCandidatePair.googRemoteAddress.split(':')\n            this.remoteAddress = remote[0]\n            this.remotePort = Number(remote[1])\n          }\n          if (this.remoteAddress) {\n            this.remoteFamily = this.remoteAddress.includes(':')\n              ? 'IPv6'\n              : 'IPv4'\n          }\n\n          this._debug(\n            'connect local: %s:%s remote: %s:%s',\n            this.localAddress,\n            this.localPort,\n            this.remoteAddress,\n            this.remotePort\n          )\n        }\n\n        items.forEach(item => {\n          // Spec-compliant\n          if (item.type === 'transport' && item.selectedCandidatePairId) {\n            setSelectedCandidatePair(\n              candidatePairs[item.selectedCandidatePairId]\n            )\n          }\n\n          // Old implementations\n          if (\n            (item.type === 'googCandidatePair' &&\n              item.googActiveConnection === 'true') ||\n            ((item.type === 'candidatepair' ||\n              item.type === 'candidate-pair') &&\n              item.selected)\n          ) {\n            setSelectedCandidatePair(item)\n          }\n        })\n\n        // Ignore candidate pair selection in browsers like Safari 11 that do not have any local or remote candidates\n        // But wait until at least 1 candidate pair is available\n        if (\n          !foundSelectedCandidatePair &&\n          (!Object.keys(candidatePairs).length ||\n            Object.keys(localCandidates).length)\n        ) {\n          setTimeout(findCandidatePair, 100)\n          return\n        } else {\n          this._connecting = false\n          this._connected = true\n        }\n\n        if (this._chunk) {\n          try {\n            this.send(this._chunk)\n          } catch (err) {\n            return this.destroy(errCode(err, 'ERR_DATA_CHANNEL'))\n          }\n          this._chunk = null\n          this._debug('sent chunk from \"write before connect\"')\n\n          const cb = this._cb\n          this._cb = null\n          cb(null)\n        }\n\n        // If `bufferedAmountLowThreshold` and 'onbufferedamountlow' are unsupported,\n        // fallback to using setInterval to implement backpressure.\n        if (typeof this._channel.bufferedAmountLowThreshold !== 'number') {\n          this._interval = setInterval(() => this._onInterval(), 150)\n          if (this._interval.unref) this._interval.unref()\n        }\n\n        this._debug('connect')\n        this.emit('connect')\n      })\n    }\n    findCandidatePair()\n  }\n\n  _onInterval () {\n    if (\n      !this._cb ||\n      !this._channel ||\n      this._channel.bufferedAmount > MAX_BUFFERED_AMOUNT\n    ) {\n      return\n    }\n    this._onChannelBufferedAmountLow()\n  }\n\n  _onSignalingStateChange () {\n    if (this.destroyed) return\n\n    if (this._pc.signalingState === 'stable') {\n      this._isNegotiating = false\n\n      // HACK: Firefox doesn't yet support removing tracks when signalingState !== 'stable'\n      this._debug('flushing sender queue', this._sendersAwaitingStable)\n      this._sendersAwaitingStable.forEach(sender => {\n        this._pc.removeTrack(sender)\n        this._queuedNegotiation = true\n      })\n      this._sendersAwaitingStable = []\n\n      if (this._queuedNegotiation) {\n        this._debug('flushing negotiation queue')\n        this._queuedNegotiation = false\n        this._needsNegotiation() // negotiate again\n      } else {\n        this._debug('negotiated')\n        this.emit('negotiated')\n      }\n    }\n\n    this._debug('signalingStateChange %s', this._pc.signalingState)\n    this.emit('signalingStateChange', this._pc.signalingState)\n  }\n\n  _onIceCandidate (event) {\n    if (this.destroyed) return\n    if (event.candidate && this.trickle) {\n      this.emit('signal', {\n        type: 'candidate',\n        candidate: {\n          candidate: event.candidate.candidate,\n          sdpMLineIndex: event.candidate.sdpMLineIndex,\n          sdpMid: event.candidate.sdpMid\n        }\n      })\n    } else if (!event.candidate && !this._iceComplete) {\n      this._iceComplete = true\n      this.emit('_iceComplete')\n    }\n    // as soon as we've received one valid candidate start timeout\n    if (event.candidate) {\n      this._startIceCompleteTimeout()\n    }\n  }\n\n  _onChannelMessage (event) {\n    if (this.destroyed) return\n    let data = event.data\n    if (data instanceof ArrayBuffer) data = new Uint8Array(data)\n    this.emit('data', data)\n  }\n\n  _onChannelBufferedAmountLow () {\n    if (this.destroyed || !this._cb) return\n    this._debug(\n      'ending backpressure: bufferedAmount %d',\n      this._channel.bufferedAmount\n    )\n    const cb = this._cb\n    this._cb = null\n    cb(null)\n  }\n\n  _onChannelOpen () {\n    if (this._connected || this.destroyed) return\n    this._debug('on channel open')\n    this._channelReady = true\n    this._maybeReady()\n  }\n\n  _onChannelClose () {\n    if (this.destroyed) return\n    this._debug('on channel close')\n    this.destroy()\n  }\n\n  _onTrack (event) {\n    if (this.destroyed) return\n\n    event.streams.forEach(eventStream => {\n      this._debug('on track')\n      this.emit('track', event.track, eventStream)\n\n      this._remoteTracks.push({\n        track: event.track,\n        stream: eventStream\n      })\n\n      if (\n        this._remoteStreams.some(remoteStream => {\n          return remoteStream.id === eventStream.id\n        })\n      ) { return } // Only fire one 'stream' event, even though there may be multiple tracks per stream\n\n      this._remoteStreams.push(eventStream)\n      queueMicrotask(() => {\n        this._debug('on stream')\n        this.emit('stream', eventStream) // ensure all tracks have been added\n      })\n    })\n  }\n\n  _debug (...args) {\n    if (!this._doDebug) return\n    args[0] = '[' + this._id + '] ' + args[0]\n    console.log(...args)\n  }\n\n  // event emitter\n  on (key, listener) {\n    const map = this._map\n    if (!map.has(key)) map.set(key, new Set())\n    map.get(key).add(listener)\n  }\n\n  off (key, listener) {\n    const map = this._map\n    const listeners = map.get(key)\n    if (!listeners) return\n    listeners.delete(listener)\n    if (listeners.size === 0) map.delete(key)\n  }\n\n  once (key, listener) {\n    const listener_ = (...args) => {\n      this.off(key, listener_)\n      listener(...args)\n    }\n    this.on(key, listener_)\n  }\n\n  emit (key, ...args) {\n    const map = this._map\n    if (!map.has(key)) return\n    for (const listener of map.get(key)) {\n      try {\n        listener(...args)\n      } catch (err) {\n        console.error(err)\n      }\n    }\n  }\n}\n\nPeer.WEBRTC_SUPPORT = !!getBrowserRTC()\n\n/**\n * Expose peer and data channel config for overriding all Peer\n * instances. Otherwise, just set opts.config or opts.channelConfig\n * when constructing a Peer.\n */\nPeer.config = {\n  iceServers: [\n    {\n      urls: [\n        'stun:stun.l.google.com:19302',\n        'stun:global.stun.twilio.com:3478'\n      ]\n    }\n  ],\n  sdpSemantics: 'unified-plan'\n}\n\nPeer.channelConfig = {}\n\n// module.exports = Peer\nexport default Peer\n","import {encodeBytes, decodeBytes} from './utils.js'\n\nconst algo = 'AES-CBC'\n\nconst pack = buff =>\n  window.btoa(String.fromCharCode.apply(null, new Uint8Array(buff)))\n\nconst unpack = packed => {\n  const str = window.atob(packed)\n\n  return new Uint8Array(str.length).map((_, i) => str.charCodeAt(i)).buffer\n}\n\nexport const genKey = async (secret, ns) =>\n  crypto.subtle.importKey(\n    'raw',\n    await crypto.subtle.digest(\n      {name: 'SHA-256'},\n      encodeBytes(`${secret}:${ns}`)\n    ),\n    {name: algo},\n    false,\n    ['encrypt', 'decrypt']\n  )\n\nexport const encrypt = async (keyP, plaintext) => {\n  const iv = crypto.getRandomValues(new Uint8Array(16))\n\n  return JSON.stringify({\n    c: pack(\n      await crypto.subtle.encrypt(\n        {name: algo, iv},\n        await keyP,\n        encodeBytes(plaintext)\n      )\n    ),\n    iv: [...iv]\n  })\n}\n\nexport const decrypt = async (keyP, raw) => {\n  const {c, iv} = JSON.parse(raw)\n\n  return decodeBytes(\n    await crypto.subtle.decrypt(\n      {name: algo, iv: new Uint8Array(iv)},\n      await keyP,\n      unpack(c)\n    )\n  )\n}\n"],"names":["parcelRequire","$dZ1ej","$f06e02ecc12ac090$var$occupiedRooms","$f06e02ecc12ac090$var$sockets","$f06e02ecc12ac090$var$socketListeners","$f06e02ecc12ac090$var$trackerAction","$f06e02ecc12ac090$var$defaultTrackerUrls","$f06e02ecc12ac090$export$767472c72ffc2784","$cQlYm","initGuard","config","ns","connectedPeers","key","password","$lnAYI","genKey","trackerUrls","slice","length","trackerRedundancy","mkErr","infoHashP","crypto","subtle","digest","encodeBytes","libName","appId","then","buffer","Array","from","Uint8Array","map","b","toString","join","makeOffers","howMany","fromEntries","fill","peer","initPeer","rtcConfig","genId","offerP","Promise","res","once","events","signal","onSocketMessage","async","socket","e","infoHash","val","JSON","parse","data","console","error","info_hash","peer_id","selfId","failure","warn","interval","announceSecs","clearInterval","announceInterval","setInterval","announceAll","offer","offer_id","handledOffers","answer","send","stringify","sdp","encrypt","action","to_peer_id","on","connect","onConnect","close","onDisconnect","decrypt","offerPool","destroyed","announce","numwant","offers","all","entries","id","makeSocket","url","forced","WebSocket","onopen","bind","onmessage","values","forEach","f","cleanPool","readyState","OPEN","CONNECTING","destroy","offerId","onPeerConnect","peerId","noOp","default","$a2e1ed1997be3b3c$var$TypedArray","Object","getPrototypeOf","$a2e1ed1997be3b3c$var$chunkSize","$a2e1ed1997be3b3c$var$oneByteMax","$a2e1ed1997be3b3c$var$buffLowEvent","$a2e1ed1997be3b3c$export$2e2bcd8739ae039","onPeer","onSelfLeave","peerMap","actions","pendingTransmissions","pendingPongs","pendingStreamMetas","pendingTrackMetas","iterate","targets","isArray","keys","flatMap","makeAction","type","typeEncoded","byteLength","typeBytes","set","typePadded","decodeBytes","nonce","onComplete","onProgress","meta","undefined","isJson","isBlob","Blob","isBinary","ArrayBuffer","arrayBuffer","metaEncoded","chunkTotal","Math","ceil","chunks","_","i","isLast","isMeta","chunk","$a2e1ed1997be3b3c$var$progressIndex","$a2e1ed1997be3b3c$var$typeIndex","$a2e1ed1997be3b3c$var$nonceIndex","round","$a2e1ed1997be3b3c$var$tagIndex","subarray","chan","_channel","chunkN","bufferedAmount","bufferedAmountLowThreshold","next","removeEventListener","addEventListener","handleData","tag","progress","payload","target","push","full","combineChunks","text","sendPing","getPing","sendPong","getPong","sendSignal","getSignal","sendStreamMeta","getStreamMeta","sendTrackMeta","getTrackMeta","onPeerJoin","onPeerLeave","onPeerStream","onPeerTrack","onData","exitPeer","stream","track","code","__drainEarlyData","ping","start","Date","now","leave","getPeers","addStream","removeStream","addTrack","removeTrack","replaceTrack","oldTrack","newTrack","$ckS7t","$959b62a819adc0d1$var$charSet","$959b62a819adc0d1$export$faba228f15d9c316","initiator","trickle","__earlyDataBuffer","$959b62a819adc0d1$export$4bf9923669ad6c63","off","$959b62a819adc0d1$export$87d45d9755ebb726","n","floor","random","$959b62a819adc0d1$export$9cc48d06fd3e6e94","occupiedRooms","$959b62a819adc0d1$export$5575a5c000f2af79","firebaseApp","$959b62a819adc0d1$export$cc42576d343e0f6a","$959b62a819adc0d1$export$d01767fa86c38c2d","$959b62a819adc0d1$export$ed97f33186d4b816","$959b62a819adc0d1$export$68c286be0e7e55b7","$959b62a819adc0d1$export$3e9f948b41964866","$959b62a819adc0d1$export$5150077fc2e7c662","$959b62a819adc0d1$export$b50b6e108474309b","msg","Error","$959b62a819adc0d1$export$2589e87d78677b0d","txt","TextEncoder","encode","$959b62a819adc0d1$export$c97600adfa527f5b","TextDecoder","decode","k","$959b62a819adc0d1$export$cafdccef1bff8e6c","reduce","a","c","$8fb15551f0fe5fb7$var$randombytes","size","array","$8fb15551f0fe5fb7$var$getBrowserRTC","globalThis","wrtc","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","RTCSessionDescription","mozRTCSessionDescription","webkitRTCSessionDescription","RTCIceCandidate","mozRTCIceCandidate","webkitRTCIceCandidate","$8fb15551f0fe5fb7$var$errCode","err","defineProperty","value","enumerable","configurable","$8fb15551f0fe5fb7$var$filterTrickle","replace","$8fb15551f0fe5fb7$var$Peer","bufferSize","this","connected","_connected","address","port","localPort","family","localFamily","localAddress","destroying","_debug","renegotiate","_needsNegotiation","transceiverRequest","addTransceiver","kind","init","candidate","_pc","remoteDescription","_addIceCandidate","_pendingCandidates","setRemoteDescription","_wrtc","_createAnswer","catch","iceCandidateObj","addIceCandidate","message","endsWith","emit","getTracks","submap","_senderMap","get","Map","sender","removed","name","_sendersAwaitingStable","_batchedNegotiation","queueMicrotask","_firstNegotiation","negotiate","_isNegotiating","_queuedNegotiation","setTimeout","_createOffer","_pcReady","_channelReady","_remoteTracks","_remoteStreams","_closingInterval","_interval","_chunk","_cb","onclose","onerror","oniceconnectionstatechange","onicegatheringstatechange","onsignalingstatechange","onicecandidate","ontrack","ondatachannel","_setupData","event","channel","binaryType","channelName","label","_onChannelMessage","onbufferedamountlow","_onChannelBufferedAmountLow","_onChannelOpen","_onChannelClose","isClosing","_startIceCompleteTimeout","_iceCompleteTimer","_iceComplete","iceCompleteTimeout","createOffer","offerOptions","allowHalfTrickle","sdpTransform","sendOffer","localDescription","setLocalDescription","_requestMissingTransceivers","getTransceivers","transceiver","mid","requested","createAnswer","answerOptions","sendAnswer","_onConnectionStateChange","connectionState","_onIceStateChange","iceConnectionState","iceGatheringState","_maybeReady","getStats","cb","flattenValues","report","prototype","call","assign","_isReactNativeWebrtc","reports","result","names","stat","timestamp","_connecting","findCandidatePair","items","remoteCandidates","localCandidates","candidatePairs","foundSelectedCandidatePair","item","setSelectedCandidatePair","selectedCandidatePair","local","localCandidateId","ip","Number","ipAddress","portNumber","googLocalAddress","split","includes","remote","remoteCandidateId","remoteAddress","remotePort","googRemoteAddress","remoteFamily","selectedCandidatePairId","googActiveConnection","selected","_onInterval","unref","_onSignalingStateChange","signalingState","_onIceCandidate","sdpMLineIndex","sdpMid","_onTrack","streams","eventStream","some","remoteStream","args","_doDebug","_id","log","listener","_map","has","Set","add","listeners","delete","listener_","constructor","opts","debug","channelConfig","channelNegotiated","negotiated","window","_peerConnectionId","onconnectionstatechange","peerIdentity","createDataChannel","WEBRTC_SUPPORT","iceServers","urls","sdpSemantics","$8fb15551f0fe5fb7$export$2e2bcd8739ae039","$f9086e0cc03499bb$var$algo","$f9086e0cc03499bb$export$ceb27d5ba53e5cf8","secret","importKey","$f9086e0cc03499bb$export$5b0f6292f11d1d18","keyP","plaintext","iv","getRandomValues","buff","btoa","String","fromCharCode","apply","$f9086e0cc03499bb$export$e85a0c9a1067c5d3","raw","packed","str","atob","charCodeAt","$f9086e0cc03499bb$var$unpack"],"version":3,"file":"trystero.31d87074.js.map"}